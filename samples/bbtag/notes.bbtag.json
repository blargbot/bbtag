[
  "{trim;",
  "{//;////////////////////////////////////////;\\\\}",
  "{//;/ Notes TAG Made By: Allen Miquel#8168 \\;//}",
  "{//;\\ Contact at Blargbot's Official Guild /;\\\\}",
  "{//;////////////////////////////////////////;//}",
  "{if;{iscc};",
  "  {set;~prefixCommandName;{prefix}{commandname}};",
  "  {set;~prefixCommandName;{prefix}t {commandname}}",
  "}",
  "{//;Check if the user has bought the Notes Access from the Cookies Shop and it's Kenzo's Server:}",
  "{if;{guildid};==;296443021468368908;",
  "  {if;{hasrole;403858030812463114};==;false;",
  "<:redTick:359820611079372800>**Bummer** **{username}*!***  You can't do that*!*",
  "*Buy the command from `!cookies shop` first!*",
  "    {return}",
  "  }",
  "}",
  "{if;{get;@{userid}notesSettingsEmbed};==;;",
  "  {set;@{userid}notesSettingsEmbed;on}",
  "}",
  "{if;{get;@{userid}eColor};!=;;",
  "  {set;~eColor;{get;@{userid}eColor}};",
  "  {set;~eColor;[]}",
  "  {set;~roles;{roles;{userid}}}",
  "  {foreach;~color;{get;~roles};",
  "    {if;{rolecolor;{get;~color}};!=;000000;",
  "      {push;{get;~eColor};{rolecolor;{get;~color}}}",
  "    }",
  "  }",
  "  {if;{length;{get;~eColor}};==;0;",
  "    {set;~eColor;c1694f}",
  "  }",
  "}",
  "{if;{get;@{userid}notesSettingsEmbedAvatar};==;on;",
  "  {set;~eIcon;{useravatar}};",
  "  {set;~eIcon;https://blargbot.xyz/color/{get;~eColor;0}}",
  "}",
  "{set;~notesVersion;v1.7}",
  "{set;~notesRevision;v1.7.25.01}",
  "{set;~notesEntryNameLimit;20}",
  "{set;~notesMiscChars;39}",
  "{if;{get;@{userid}commandDates};==;;",
  "  {if;{length;{get;@{userid}commandDates}};!=;{length;{get;@{userid}commandNames}};",
  "    {set;@{userid}commandDates;[]}",
  "    {void;",
  "      {repeat;",
  "        {push;{get;@{userid}commandDates};{space}-{space}`Not Set`};",
  "        {length;{get;@{userid}commandNames}}",
  "      }",
  "    };",
  "    {set;@{userid}commandDates;[]}",
  "  }",
  "}",
  "{set;~notesParameters;page;add;edit;append;remove;help;view;rename}",
  "{set;~regextestArgs0;{regextest;{args;0};/^(page|add|edit|append|remove|help|view|rename)$/gim}}",
  "{set;~regextestArgs1;{regextest;{args;1};/^(page|add|edit|append|remove|help|view|rename)$/gim}}",
  "{set;~regextestArgs2;{regextest;{args;2};/^(page|add|edit|append|remove|help|view|rename)$/gim}}",
  "{if;{userid};==;217786078067818497;",
  "  {switch;{lower;{args;0}};",
  "    maintenance;",
  "    {if;{get;@notesMaintenance};==;true;",
  "      {set;@notesMaintenance}",
  "      <:greenTick:322847218682036254>**Tag** `{capitalize;{commandname};lower}` **is no longer under Maintenance**.",
  "      {return};",
  "      {set;@notesMaintenance;true}",
  "      <:greenTick:322847218682036254>**Tag** `{capitalize;{commandname};lower}` **is now under Maintenance**.",
  "      {return}",
  "    }",
  "  }",
  "}",
  "{if;{get;@notesMaintenance};==;true;",
  "  {set;~nA;217786078067818497;231499325123854336;170844396877512704;307235664460644363}",
  "  {set;~index;-1}",
  "  {repeat;",
  "    {void;{increment;~index}}",
  "    {if;{userid};==;{get;~nA;{get;~index}};",
  "      {set;~nAA;true}",
  "    };",
  "    {length;{get;~nA}}",
  "  }",
  "  {if;{get;~nAA};!=;true;",
  "<a:warningSquareBlink:478804824381456390>**Access Denied - Maintenance**",
  "<a:redTickPulse:405337501448798210>**Sorry for the Inconvenience*!***{space;2}<:ThonkangEyes:266302986756554752>",
  "  {return}",
  "  }",
  "}",
  "{if;{get;@{userid}commandNames};==;;",
  "  {set;@{userid}commandNames;[]}",
  "  {set;@{userid}commandInfo;[]}",
  "  {embed;{buildembed;",
  "    color:{get;~eColor;0};",
  "    author.icon_url:{get;~eIcon};",
  "    author.name:Notes! - {get;~notesRevision};",
  "    description:Hi **{username}*!***  It seems this is your first time using this Tag*!*",
  "This will allow you to create your very own fancy Notes applying parameters.",
  "Below you'll find a quick start guide, but please take your time to go through the `Help` pages to learn how to squeeze the most out of your Notes!",
  "{zws};",
  "    fields.name:Add an entry straight away:;",
  "    fields.value::black_small_square:`{get;~prefixCommandName} add EntryName Content`;",
  "    fields.name:List your entries:;",
  "    fields.value::black_small_square:`{get;~prefixCommandName}`;",
  "    fields.name:Retrieve an entry:;",
  "    fields.value::black_small_square:`{get;~prefixCommandName} Name/Number`;",
  "    fields.name:Help and Advanced tips!;",
  "    fields.value::black_small_square:`{get;~prefixCommandName} help`",
  "{zws}",
  ":small_orange_diamond:**Created By**: **[Allen Miquel#8168](https://canary.discordapp.com/users/217786078067818497)**",
  "  }}",
  "  {return}",
  "}",
  "{set;~pageLimit;5}",
  "{set;~entriesLength;{length;{get;@{userid}commandNames}}}",
  "{set;~entriesPages;{ceil;{math;/;{get;~entriesLength};{get;~pageLimit}}}}",
  "{if;{argslength};==;0;",
  "  {if;{length;{get;@{userid}commandNames}};==;0;",
  "<a:warningSquareBlink:478804824381456390>**You have No Entries yet**.",
  ":black_small_square:**Usage Help**: `{get;~prefixCommandName} Help`",
  "    {return}",
  "  }",
  "{exec;{commandname};page 1}",
  "  {return};",
  "{set;~capitalizedCommandNames;[]}",
  "{set;~index;0}",
  "{void;",
  "  {repeat;",
  "    {set;~line;{get;@{userid}commandNames;{get;~index}}}",
  "    {set;~jindex;0}",
  "    {set;~splitLine;{split;{get;~line};{space}}}",
  "    {repeat;",
  "      {splice;{get;~splitLine};{get;~jindex};1;{capitalize;{get;~splitLine;{get;~jindex}};l}}",
  "      {increment;~jindex};",
  "      {length;{get;~splitLine}}",
  "    }",
  "    {push;{get;~capitalizedCommandNames};{join;{get;~splitLine};{space}}}",
  "    {increment;~index};",
  "    {length;{get;@{userid}commandNames}}",
  "  }",
  "}",
  "  {set;~index;0}",
  "  {set;~pageNumber;[]}",
  "  {set;~entryNumber;[]}",
  "  {if;{regextest;{args;0};/^(view|check)$/gim};==;true;",
  "    {set;~notesView;{lower;{args;0}}}",
  "  }",
  "{void;",
  "  {repeat;",
  "    {push;{get;~entryNumber};{get;~index}}",
  "    {if;",
  "      {logic;||;",
  "        {bool;{math;-;{args;0};1};==;{get;~entryNumber;{get;~index}}};",
  "        {logic;&&;",
  "          {bool;{lower;{args;0}};==;{get;~notesView}};",
  "          {bool;{math;-;{args;1};1};==;{get;~entryNumber;{get;~index}}}",
  "        }",
  "      };==;true;",
  "      {set;~entryNumberGo;true}",
  "      {set;~commandMatchNumber;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "      {set;~commandMatchNumberName;{get;~capitalizedCommandNames;{get;~index}}}",
  "      {set;~infoMatchNumber;{get;@{userid}commandInfo;{get;~index}}}",
  "      {set;~datesMatch;{get;@{userid}commandDates;{get;~index}}}",
  "      {set;~datesPosition;{get;~index}}",
  "    }",
  "    {push;{get;~pageNumber};**`{if;{length;{math;+;{get;~index};1}};<;2;0{math;+;{get;~index};1};{math;+;{get;~index};1}}`** - `{if;{regextest;{get;~capitalizedCommandNames;{get;~index}};/ /gm};==;true;\"{get;~capitalizedCommandNames;{get;~index}}\";{get;~capitalizedCommandNames;{get;~index}}}`}",
  "    {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args}};",
  "      {set;~entryNumberGo}",
  "      {set;~commandMatch;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "      {set;~commandMatchName;{get;~capitalizedCommandNames;{get;~index}}}",
  "      {set;~infoMatch;{get;@{userid}commandInfo;{get;~index}}}",
  "      {set;~datesMatch;{get;@{userid}commandDates;{get;~index}}}",
  "      {set;~datesPosition;{get;~index}}",
  "    }",
  "    {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args;1;n}};",
  "      {set;~entryNumberGo}",
  "      {set;~commandMatch;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "      {set;~commandMatchName;{get;~capitalizedCommandNames;{get;~index}}}",
  "      {set;~commandPosition;{get;~index}}",
  "      {set;~infoMatch;{get;@{userid}commandInfo;{get;~index}}}",
  "      {set;~datesMatch;{get;@{userid}commandDates;{get;~index}}}",
  "      {set;~datesPosition;{get;~index}}",
  "      {set;~infoPosition;{get;~index}};",
  "      {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args;1}};",
  "        {set;~entryNumberGo}",
  "        {set;~commandMatch;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "        {set;~commandMatchName;{get;~capitalizedCommandNames;{get;~index}}}",
  "        {set;~commandPosition;{get;~index}}",
  "        {set;~infoMatch;{get;@{userid}commandInfo;{get;~index}}}",
  "        {set;~datesMatch;{get;@{userid}commandDates;{get;~index}}}",
  "        {set;~datesPosition;{get;~index}}",
  "        {set;~infoPosition;{get;~index}}",
  "      }",
  "    }",
  "    {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args;2;n}};",
  "      {set;~entryNumberGo}",
  "      {set;~commandMatch2;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "      {set;~commandMatch2Name;{get;~capitalizedCommandNames;{get;~index}}}",
  "      {set;~infoMatch2;{get;@{userid}commandInfo;{get;~index}}}",
  "      {set;~datesMatch;{get;@{userid}commandDates;{get;~index}}}",
  "      {set;~datesPosition;{get;~index}}",
  "    }",
  "    {increment;~index};",
  "    {length;{get;@{userid}commandNames}}",
  "  }",
  "}",
  "{if;{get;@{userid}notesSettingsDate};!=;;",
  "  {switch;{get;@{userid}notesSettingsDate};",
  "    US;",
  "    {set;~notesTitleDivider;{space}-{space}{time;(MM/DD/YY)}};",
  "    GLOBAL;",
  "    {set;~notesTitleDivider;{space}-{space}{time;(DD/MM/YY)}}",
  "  };",
  "  {set;~notesTitleDivider;:}",
  "  {set;~datesMatch;:}",
  "}",
  "  {if;{logic;&&;",
  "        {bool;{get;~entryNumberGo};==;true};",
  "        {bool;{regextest;{parseint;{get;~commandMatch}};/^\\d+$/gim};!=;true}",
  "      };==;true;",
  "    {if;{indexof;{lower;{args}};raw};==;-1;",
  "      {if;{get;@{userid}notesSettingsEmbed};!=;off;",
  "        {embed;",
  "          {buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:{get;~commandMatchNumberName}{get;~datesMatch};",
  "            description:{get;~infoMatchNumber}",
  "          }",
  "        }",
  "        {return}",
  "      }",
  ":clipboard: **{get;~commandMatchNumberName}**{get;~datesMatch}{newline}-----{newline}{get;~infoMatchNumber}",
  "      {return};",
  ":clipboard: **{get;~commandMatchNumberName}**{get;~datesMatch}{newline}-----{newline}```{newline}{regexreplace;{get;~infoMatchNumber};/```/gim;\\`\\`\\`}{newline}```",
  "      {return}",
  "    }",
  "  }",
  "  {if;{get;~regextestArgs0};==;true;",
  "    {set;~commandMatch}",
  "    {set;~commandMatchName}",
  "    {set;~infoPosition}",
  "    {set;~infoMatch}",
  "    {set;~index;0}",
  "    {void;",
  "      {repeat;",
  "        {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args;1;n}};",
  "          {set;~entryNumberGo}",
  "          {set;~commandMatch;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "          {set;~commandMatchName;{get;~capitalizedCommandNames;{get;~index}}}",
  "          {set;~infoMatch;{get;@{userid}commandInfo;{get;~index}}}",
  "          {set;~infoPosition;{get;~index}};",
  "          {if;{lower;{get;@{userid}commandNames;{get;~index}}};==;{lower;{args;1}};",
  "            {set;~entryNumberGo}",
  "            {set;~commandMatch;{lower;{get;@{userid}commandNames;{get;~index}}}}",
  "            {set;~commandMatchName;{get;~capitalizedCommandNames;{get;~index}}}",
  "            {set;~commandPosition;{get;~index}}",
  "            {set;~infoMatch;{get;@{userid}commandInfo;{get;~index}}}",
  "            {set;~infoPosition;{get;~index}}",
  "          }",
  "        }",
  "        {increment;~index};",
  "        {length;{get;@{userid}commandNames}}",
  "      }",
  "    }",
  "  }",
  "  {if;{lower;{args;0}};==;raw;",
  "    {if;{lower;{args;1;n}};==;{get;~commandMatch};",
  "      {exec;{commandname};view raw \"{lower;{args;1;n}}\"}",
  "      {return}",
  "    }",
  "  }",
  "  {if;{lower;{args}};==;{get;~commandMatch};",
  "    {exec;{commandname};view {lower;{args}}}",
  "    {return}",
  "  }",
  "  {switch;true;",
  "    {regextest;{args;0};/^(raw)$/gim};",
  "    {exec;{commandname};{lower;{args;1}} raw};",
  "    {regextest;{args;0};/^(rename)$/gim};",
  "    {if;{argslength};>;2;",
  "      {if;{length;{args;2}};>;{get;~notesEntryNameLimit};",
  "<a:warningSquareBlink:478804824381456390>**New Entry Name Too Long**.",
  ":black_small_square:**Limit**: `{get;~notesEntryNameLimit}` **Characters**.",
  "        {return}",
  "      }",
  "      {if;{logic;&&;{bool;{regextest;{args;2};/\\`+/gim};==;true};{bool;{argslength};<;1}};==;true;",
  "<a:redTickPulse:405337501448798210>**Entry Names Can't contain Backticks**.",
  "        {return}",
  "      }",
  "      {if;{lower;{args;2}};==;raw;",
  "<a:warningSquareBlink:478804824381456390>**An Entry named Raw is bound to cause issues with this Tag's own** `Raw` **feature**.",
  ":white_small_square:**Please name it something more Unique**.",
  "        {return}",
  "      }",
  "      {if;{lower;{args;1}};!=;{get;~commandMatch};",
  "<a:redTickPulse:405337501448798210>**Entry** `{capitalize;{args;1};lower}` **Doesn't Exist**.",
  ":white_small_square:**Type** `{get;~prefixCommandName}` **to see your List**.",
  ":white_small_square:**Type** `{get;~prefixCommandName} help add` **to see How**.",
  "        {return};",
  "        {if;{lower;{args;1}};==;{get;~commandMatch2};",
  "<a:warningSquareBlink:478804824381456390>**Entry** `{capitalize;{args;1};lower}` **Already Exists**.",
  ":black_small_square:**Type**: `{get;~prefixCommandName}` **to see your List**.",
  "          {return};",
  "          {if;{lower;{args;2}};==;{get;~commandMatch2};",
  "<a:warningSquareBlink:478804824381456390>**Entry** `{capitalize;{args;2};lower}` **Already Exists**.",
  ":black_small_square:**Type**: `{get;~prefixCommandName}` **to see your List**.",
  "            {return};",
  "          }",
  "        }",
  "      }",
  "      {void;{splice;{get;@{userid}commandNames};{get;~commandPosition};1;{capitalize;{args;2};lower}}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Renamed**.",
  "{if;{get;~regextestArgs2};==;true;<a:warningSquareBlink:478804824381456390>**Beware**: **Your New Entry Name is a Parameter**.",
  ":white_small_square:**To View the Entry**: `{get;~prefixCommandName} {randchoose;view;check} {capitalize;{args;2};lower}`};",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} OldName NewName`",
  "    };",
  "    {regextest;{args;0};/^(page|list|entrys|entries|notes)$/gim};",
  "    {if;{argslength};<;2;",
  "      {exec;{commandname};page 1}",
  "      {return}",
  "    }",
  "    {if;{logic;||;{bool;{parseint;{args;1}};==;NaN};{bool;{parseint;{args;1}};<;1}};==;true;",
  "      {if;{get;~entriesPages};==;1;",
  "<a:warningSquareBlink:478804824381456390>**You only have** `1` **Page**.",
  ":black_small_square:**Type**: `{get;~prefixCommandName}`",
  "{return};",
  "<a:redTickPulse:405337501448798210>**Specify a Valid Number between** `1` **and** `{get;~entriesPages}`.{return}",
  "      }",
  "    }",
  "    {if;{parseint;{args;1}};<=;{get;~entriesPages};",
  "{set;~pageArgs;{math;-;{parseint;{args;1}};1}}",
  "{set;~pageNumber;",
  "  {slice;",
  "    {get;~pageNumber};",
  "    {math;*;{get;~pageArgs};{get;~pageLimit}};",
  "    {math;+;{math;*;{get;~pageArgs};{get;~pageLimit}};{get;~pageLimit}}",
  "  }",
  "}",
  "{if;{get;@{userid}notesSettingsEmbed};!=;off;",
  "  {embed;",
  "    {buildembed;",
  "color:{get;~eColor;0};",
  "author.icon_url:{get;~eIcon};",
  "author.name:{username}'s Notes:;",
  "author.url:https://canary.discordapp.com/users/{userid};",
  "description:",
  "+---------------------------+",
  ":black_small_square:{join;{get;~pageNumber};{newline}:black_small_square:}",
  "+---------------------------+",
  ":small_orange_diamond:**Page**: `{parseint;{args;1}}` **out of** `{get;~entriesPages}`",
  ":small_orange_diamond:**View**: `{get;~prefixCommandName} View`",
  ":small_orange_diamond:**Help**: `{get;~prefixCommandName} Help`",
  "    }",
  "  }",
  "  {return}",
  "}",
  ":clipboard: **{username}**'s Notes:",
  "+---------------------------+",
  ":white_small_square:{join;{get;~pageNumber};{newline}:white_small_square:}",
  "+---------------------------+",
  ":small_orange_diamond:**Page**: `{parseint;{args;1}}` **out of** `{get;~entriesPages}`",
  ":small_orange_diamond:**View**: `{get;~prefixCommandName} View`",
  ":small_orange_diamond:**Help**: `{get;~prefixCommandName} Help`;",
  "<a:redTickPulse:405337501448798210>**You don't have That many Pages**.",
  "    };",
  "    {regextest;{args;0};/^(set)$/gim};",
  "    {if;{lower;{args;1}};==;{get;~commandMatch};",
  "    {if;{argslength};>=;3;",
  "{if;{length;{get;~commandMatch}};<=;2000;{set;~notesTickInfo;<:greenTick:322847218682036254>};",
  "{set;~notesTickInfo;<a:redTickPulse:405337501448798210>}}",
  "{if;{length;{args;2;n}};<=;2000;{set;~notesTickArgs;<:greenTick:322847218682036254>};",
  "{set;~notesTickArgs;<a:redTickPulse:405337501448798210>}}",
  "      {if;",
  "        {math;+;",
  "          {length;{get;~commandMatch}};",
  "          {get;~notesMiscChars};",
  "          {length;{args;2;n}}",
  "        };>;2000;",
  "<a:warningSquareBlink:478804824381456390>**Exceeded Character Limits*!***",
  "<:greenTick:322847218682036254>**Miscellaneous Characters**: `{math;+;{get;~notesMiscChars};{length;{get;~commandMatch}}}`",
  "{get;~notesTickArgs}**New Characters**: `{length;{args;2;n}}`",
  "<a:redTickPulse:405337501448798210>**Total**: `{math;+;{length;{args;2;n}};{length;{get;~commandMatch}};{get;~notesMiscChars}}/2000`",
  "        {return}",
  "      }",
  "      {if;{regextest;{args;2;n};/-bt/gim};==;true;",
  "        {switch;true;",
  "          {regextest;{args;2;n};/-bt3/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/```/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt3)/gim;}};",
  "          {regextest;{args;2;n};/-bt2/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/``/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt2)/gim;}};",
  "          {regextest;{args;2;n};/-bt1/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt1)/gim;}};",
  "          {regextest;{args;2;n};/-bt/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt)/gim;}};",
  "        };",
  "        {set;~args2ThroughN;{args;2;n}}",
  "      }",
  "      {void;{splice;{get;@{userid}commandDates};{get;~datesPosition};1;{get;~notesTitleDivider}}}",
  "      {void;{splice;{get;@{userid}commandInfo};{get;~infoPosition};1;{get;~args2ThroughN}}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Edited**.;",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName Content`",
  "    };",
  "    {if;{logic;&&;{bool;{regextest;{args;1};/\\`+/gim};==;true};{bool;{argslength};<;1}};==;true;",
  "<a:redTickPulse:405337501448798210>**Entry Names Can't contain Backticks**.",
  "      {return}",
  "    }",
  "    {if;{argslength};>=;3;",
  "      {if;{length;{args;1}};>;{get;~notesEntryNameLimit};",
  "<a:warningSquareBlink:478804824381456390>**Entry Name Too Long**.",
  ":black_small_square:**Limit**: `{get;~notesEntryNameLimit}` **Characters**.",
  "        {return}",
  "      }",
  "      {if;{lower;{args;1}};==;raw;",
  "<a:warningSquareBlink:478804824381456390>**An Entry named Raw is bound to cause issues with this Tag's own** `Raw` **feature**.",
  ":white_small_square:**Please name it something more Unique**.",
  "        {return}",
  "      }",
  "{if;{length;{get;~commandMatch}};<=;2000;{set;~notesTickInfo;<:greenTick:322847218682036254>};",
  "{set;~notesTickInfo;<a:redTickPulse:405337501448798210>}}",
  "{if;{length;{args;2;n}};<=;2000;{set;~notesTickArgs;<:greenTick:322847218682036254>};",
  "{set;~notesTickArgs;<a:redTickPulse:405337501448798210>}}",
  "      {if;",
  "        {math;+;",
  "          {length;{args;1}};",
  "          {get;~notesMiscChars};",
  "          {length;{args;2;n}}",
  "        };>;2000;",
  "<a:warningSquareBlink:478804824381456390>**Exceeded Character Limits*!***",
  "<:greenTick:322847218682036254>**Miscellaneous Characters**: `{math;+;{get;~notesMiscChars};{length;{args;1}}}`",
  "{get;~notesTickArgs}**New Characters**: `{length;{args;2;n}}`",
  "<a:redTickPulse:405337501448798210>**Total**: `{math;+;{length;{args;2;n}};{length;{args;1}};{get;~notesMiscChars}}/2000`",
  "        {return}",
  "      }",
  "      {if;{regextest;{args;2;n};/-bt/gim};==;true;",
  "        {switch;true;",
  "          {regextest;{args;2;n};/-bt3/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/```/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt3)/gim;}};",
  "          {regextest;{args;2;n};/-bt2/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/``/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt2)/gim;}};",
  "          {regextest;{args;2;n};/-bt1/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt1)/gim;}};",
  "          {regextest;{args;2;n};/-bt/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt)/gim;}};",
  "        };",
  "        {set;~args2ThroughN;{args;2;n}}",
  "      }",
  "      {push;{get;@{userid}commandDates};{get;~notesTitleDivider}}",
  "      {push;{get;@{userid}commandNames};{capitalize;{args;1};lower}}",
  "      {push;{get;@{userid}commandInfo};{get;~args2ThroughN}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Added**.",
  "{if;{get;~regextestArgs1};==;true;<a:warningSquareBlink:478804824381456390>**Beware**: **Your Entry Name is a Parameter**.",
  ":white_small_square:**To View the Entry**: `{get;~prefixCommandName} {randchoose;view;check} {capitalize;{args;1};lower}`};",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName Content`",
  "    }",
  "    };",
  "    {regextest;{args;0};/^(add|create)$/gim};",
  "    {if;{logic;&&;{bool;{regextest;{args;1};/\\`+/gim};==;true};{bool;{argslength};<;1}};==;true;",
  "<a:redTickPulse:405337501448798210>**Entry Names Can't contain Backticks**.",
  "      {return}",
  "    }",
  "    {if;{lower;{args;1}};==;raw;",
  "<a:warningSquareBlink:478804824381456390>**An Entry named Raw is bound to cause issues with this Tag's own** `Raw` **feature**.",
  ":white_small_square:**Please name it something more Unique**.",
  "      {return}",
  "    }",
  "    {if;{argslength};>=;3;",
  "      {if;{lower;{args;1}};==;{get;~commandMatch};",
  "<a:warningSquareBlink:478804824381456390>**Entry** `{capitalize;{args;1};lower}` **Already Exists**.{return}",
  "      }",
  "      {if;{length;{args;1}};>;{get;~notesEntryNameLimit};",
  "<a:warningSquareBlink:478804824381456390>**Entry Name Too Long**.",
  ":black_small_square:**Limit**: `{get;~notesEntryNameLimit}` **Characters**.",
  "        {return}",
  "      }",
  "{if;{length;{get;~commandMatch}};<=;2000;{set;~notesTickInfo;<:greenTick:322847218682036254>};",
  "{set;~notesTickInfo;<a:redTickPulse:405337501448798210>}}",
  "{if;{length;{args;2;n}};<=;2000;{set;~notesTickArgs;<:greenTick:322847218682036254>};",
  "{set;~notesTickArgs;<a:redTickPulse:405337501448798210>}}",
  "      {if;",
  "        {math;+;",
  "          {length;{args;1}};",
  "          {get;~notesMiscChars};",
  "          {length;{args;2;n}}",
  "        };>;2000;",
  "<a:warningSquareBlink:478804824381456390>**Exceeded Character Limits*!***",
  "<:greenTick:322847218682036254>**Miscellaneous Characters**: `{math;+;{get;~notesMiscChars};{length;{args;1}}}`",
  "{get;~notesTickArgs}**New Characters**: `{length;{args;2;n}}`",
  "<a:redTickPulse:405337501448798210>**Total**: `{math;+;{length;{args;2;n}};{length;{args;1}};{get;~notesMiscChars}}/2000`",
  "        {return}",
  "      }",
  "      {if;{regextest;{args;2;n};/-bt/gim};==;true;",
  "        {switch;true;",
  "          {regextest;{args;2;n};/-bt3/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/```/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt3)/gim;}};",
  "          {regextest;{args;2;n};/-bt2/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/``/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt2)/gim;}};",
  "          {regextest;{args;2;n};/-bt1/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt1)/gim;}};",
  "          {regextest;{args;2;n};/-bt/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt)/gim;}};",
  "        };",
  "        {set;~args2ThroughN;{args;2;n}}",
  "      }",
  "      {push;{get;@{userid}commandDates};{get;~notesTitleDivider}}",
  "      {push;{get;@{userid}commandNames};{capitalize;{args;1};lower}}",
  "      {push;{get;@{userid}commandInfo};{get;~args2ThroughN}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Added**.",
  "{if;{get;~regextestArgs1};==;true;<a:warningSquareBlink:478804824381456390>**Beware**: **Your Entry Name is a Parameter**.",
  ":white_small_square:**To View the Entry**: `{get;~prefixCommandName} {randchoose;view;check} {capitalize;{args;1};lower}`};",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName Content`",
  "    };",
  "    {regextest;{args;0};/^(edit)$/gim};",
  "    {if;{argslength};>=;3;",
  "      {if;{lower;{args;1}};!=;{get;~commandMatch};",
  "<a:redTickPulse:405337501448798210>**Entry** `{capitalize;{args;1};lower}` **Does Not Exist**.{return}",
  "      }",
  "{if;{length;{get;~commandMatch}};<=;2000;{set;~notesTickInfo;<:greenTick:322847218682036254>};",
  "{set;~notesTickInfo;<a:redTickPulse:405337501448798210>}}",
  "{if;{length;{args;2;n}};<=;2000;{set;~notesTickArgs;<:greenTick:322847218682036254>};",
  "{set;~notesTickArgs;<a:redTickPulse:405337501448798210>}}",
  "      {if;",
  "        {math;+;",
  "          {length;{get;~commandMatch}};",
  "          {get;~notesMiscChars};",
  "          {length;{args;2;n}}",
  "        };>;2000;",
  "<a:warningSquareBlink:478804824381456390>**Exceeded Character Limits*!***",
  "<:greenTick:322847218682036254>**Miscellaneous Characters**: `{math;+;{get;~notesMiscChars};{length;{get;~commandMatch}}}`",
  "{get;~notesTickArgs}**New Characters**: `{length;{args;2;n}}`",
  "<a:redTickPulse:405337501448798210>**Total**: `{math;+;{length;{args;2;n}};{length;{get;~commandMatch}};{get;~notesMiscChars}}/2000`",
  "        {return}",
  "      }",
  "      {if;{regextest;{args;2;n};/-bt/gim};==;true;",
  "        {switch;true;",
  "          {regextest;{args;2;n};/-bt3/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/```/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt3)/gim;}};",
  "          {regextest;{args;2;n};/-bt2/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/``/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt2)/gim;}};",
  "          {regextest;{args;2;n};/-bt1/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt1)/gim;}};",
  "          {regextest;{args;2;n};/-bt/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt)/gim;}};",
  "        };",
  "        {set;~args2ThroughN;{args;2;n}}",
  "      }",
  "      {void;{splice;{get;@{userid}commandDates};{get;~datesPosition};1;{get;~notesTitleDivider}}}",
  "      {void;{splice;{get;@{userid}commandInfo};{get;~infoPosition};1;{get;~args2ThroughN}}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Edited**.;",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName Content`",
  "    };",
  " {regextest;{args;0};/^(append)$/gim};",
  "    {if;{argslength};>=;3;",
  "      {if;{lower;{args;1}};!=;{get;~commandMatch};",
  "<a:redTickPulse:405337501448798210>**Entry** `{capitalize;{args;1};lower}` **Does Not Exist**.{return}",
  "      }",
  "{if;{length;{get;~commandMatch}};<=;2000;{set;~notesTickInfo;<:greenTick:322847218682036254>};",
  "{set;~notesTickInfo;<a:redTickPulse:405337501448798210>}}",
  "{if;{length;{args;2;n}};<=;2000;{set;~notesTickArgs;<:greenTick:322847218682036254>};",
  "{set;~notesTickArgs;<a:redTickPulse:405337501448798210>}}",
  "      {if;",
  "        {math;+;",
  "          {length;{get;@{userid}commandInfo;{get;~infoPosition}}};",
  "          {length;{get;~commandMatch}};",
  "          {get;~notesMiscChars};",
  "          {length;{args;2;n}}",
  "        };>;2000;",
  "<a:warningSquareBlink:478804824381456390>**Exceeded Character Limits*!***",
  "{get;~notesTickInfo}**Characters in** `{capitalize;{get;~commandMatch};lower}`: `{length;{get;@{userid}commandInfo;{get;~infoPosition}}}`",
  "<:greenTick:322847218682036254>**Miscellaneous Characters**: `{math;+;{get;~notesMiscChars};{length;{get;~commandMatch}}}`",
  "{get;~notesTickArgs}**New Characters**: `{length;{args;2;n}}`",
  "<a:redTickPulse:405337501448798210>**Total**: `{math;+;{length;{get;@{userid}commandInfo;{get;~infoPosition}}};{length;{args;2;n}};{length;{get;~commandMatch}};{get;~notesMiscChars}}/2000`",
  "        {return}",
  "      }",
  "      {if;{regextest;{args;2;n};/-bt/gim};==;true;",
  "        {switch;true;",
  "          {regextest;{args;2;n};/-bt3/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/```/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt3)/gim;}};",
  "          {regextest;{args;2;n};/-bt2/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/``/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt2)/gim;}};",
  "          {regextest;{args;2;n};/-bt1/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt1)/gim;}};",
  "          {regextest;{args;2;n};/-bt/gim};",
  "            {set;~args2ThroughN;{regexreplace;{args;2;n};/`/gim;}}",
  "            {set;~args2ThroughN;{regexreplace;{get;~args2ThroughN};/(-bt)/gim;}};",
  "        };",
  "        {set;~args2ThroughN;{args;2;n}}",
  "      }",
  "      {void;{splice;{get;@{userid}commandDates};{get;~datesPosition};1;{get;~notesTitleDivider}}}",
  "      {void;{splice;{get;@{userid}commandInfo};{get;~infoPosition};1;{get;@{userid}commandInfo;{get;~infoPosition}}{newline}{get;~args2ThroughN}}}",
  "<:greenTick:322847218682036254>**Content Appended to the** `{capitalize;{args;1};lower}` **Entry**.;",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName Content`",
  "    };",
  "    {regextest;{args;0};/^(rem|remove|del|delete)$/gim};",
  "    {if;{argslength};>=;2;",
  "      {if;{lower;{args;1}};!=;{get;~commandMatch};",
  "<a:redTickPulse:405337501448798210>**Entry** `{capitalize;{args;1};lower}` **Does Not Exist**.{return}",
  "      }",
  "      {void;{splice;{get;@{userid}commandDates};{get;~datesPosition};1}}",
  "      {void;{splice;{get;@{userid}commandNames};{get;~infoPosition};1}}",
  "      {void;{splice;{get;@{userid}commandInfo};{get;~infoPosition};1}}",
  "<:greenTick:322847218682036254>**Entry** `{capitalize;{args;1};lower}` **has been Removed**.;",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} EntryName`",
  "    };",
  "    {regextest;{args;0};/^(esetting|esettings)$/gim};",
  "    {if;{argslength};>;1;",
  "      {switch;{lower;{args;1}};",
  "        avatar;",
  "        {if;{get;@{userid}notesSettingsEmbed};==;on;",
  "          {if;{get;@{userid}notesSettingsEmbedAvatar};==;on;",
  "            {set;@{userid}notesSettingsEmbedAvatar;off}",
  "<:greenTick:322847218682036254>**Embed Avatar Display is now set to**: `OFF`.",
  "            {return};",
  "            {set;@{userid}notesSettingsEmbedAvatar;on}",
  "<:greenTick:322847218682036254>**Embed Avatar Display is now set to**: `ON`.",
  "            {return}",
  "          };",
  "          {set;@{userid}notesSettingsEmbed;on}",
  "          {set;@{userid}notesSettingsEmbedAvatar;on}",
  "<:greenTick:322847218682036254>**Embed Display is now** `ON` **and Avatar set to**: `ON`.",
  "          {return}",
  "        };",
  "        on;",
  "        {if;{get;@{userid}notesSettingsEmbed};==;on;",
  "<a:redTickPulse:405337501448798210>**Embed Display Already set to**: `ON`.",
  "          {return};",
  "          {set;@{userid}notesSettingsEmbed;on}",
  "<:greenTick:322847218682036254>**Embed Display is now set to**: `ON`.",
  "          {return}",
  "        };",
  "        [\"color\",\"colour\"];",
  "        {if;{argslength};<;3;",
  "<a:warningSquareBlink:478804824381456390>**Missing Color**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} esettings color Hex/Color`",
  ":black_small_square:**Example**: `{get;~prefixCommandName} esettings color #{randstr;0123456789abcdef;6}`",
  "          {return}",
  "        }",
  "        {if;{lower;{args;2}};==;random;",
  "          {set;~randomColor;{randstr;0123456789abcdef;6}}",
  "          {set;@{userid}eColor;{get;~randomColor}}",
  "          {if;{get;@{userid}notesSettingsEmbed};==;on;",
  "<:greenTick:322847218682036254>**Embed Color is now set to**: `{get;~randomColor}`.",
  "            {return}",
  "          }",
  "          {if;{get;@{userid}notesSettingsEmbed};==;off;",
  "<:greenTick:322847218682036254>**Embed Display is now** `ON` **and Color set to**: `{get;~randomColor}`.",
  "            {set;@{userid}notesSettingsEmbed;on}",
  "            {return}",
  "          }",
  "        }",
  "        {if;{lower;{args;2}};==;default;",
  "          {if;{get;@{userid}notesSettingsEmbed};==;off;",
  "<:greenTick:322847218682036254>**Embed Display is now** `ON` **and Color set to**: `Default`.",
  "            {set;@{userid}notesSettingsEmbed;on}",
  "            {set;@{userid}eColor}",
  "            {return}",
  "          }",
  "          {if;{get;@{userid}eColor};==;;",
  "<a:redTickPulse:405337501448798210>**Embed Color Already set to**: `Default`.",
  "            {return}",
  "          }",
  "          {set;@{userid}eColor}",
  "          {if;{get;@{userid}notesSettingsEmbed};==;on;",
  "<:greenTick:322847218682036254>**Embed Color is now set to**: `Default`.",
  "            {return}",
  "          }",
  "        }",
  "        {if;{get;@{userid}eColor};==;{color;{args;2;n}};",
  "<a:redTickPulse:405337501448798210>**Embed Color Already set to**: `{color;{args;2;n}}`.",
  "          {return}",
  "        }",
  "        {if;{color;{args;2;n}};==;`Invalid color`;",
  "<a:warningSquareBlink:478804824381456390>**Invalid Color**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} esettings color Hex/Color`",
  ":black_small_square:**Example**: `{get;~prefixCommandName} esettings color #{randstr;0123456789abcdef;6}`",
  "          {return}",
  "        }",
  "        {set;@{userid}eColor;{color;{args;2;n}}}",
  "        {if;{get;@{userid}notesSettingsEmbed};==;on;",
  "<:greenTick:322847218682036254>**Embed Color is now set to**: `{color;{args;2;n}}`.",
  "          {return}",
  "        }",
  "        {if;{get;@{userid}notesSettingsEmbed};==;off;",
  "<:greenTick:322847218682036254>**Embed Display is now** `ON` **and Color set to**: `{color;{args;2;n}}`.",
  "          {set;@{userid}notesSettingsEmbed;on}",
  "          {return}",
  "        };",
  "        off;",
  "        {if;{get;@{userid}notesSettingsEmbed};==;off;",
  "<a:redTickPulse:405337501448798210>**Embed Display Already set to**: `OFF`.",
  "          {return};",
  "          {set;@{userid}eColor}",
  "          {set;@{userid}notesSettingsEmbed;off}",
  "          {set;@{userid}notesSettingsEmbedAvatar;off}",
  "<:greenTick:322847218682036254>**Embed Display is now set to**: `OFF`.",
  "          {return}",
  "        };",
  "<a:redTickPulse:405337501448798210>**Unknown Parameter**: `{lower;{args;1}}`",
  ":white_small_square:**Usage**: `{get;~prefixCommandName} help esettings`",
  "      };",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} help esettings`",
  "    };",
  "    {regextest;{args;0};/^(dsetting|dsettings)$/gim};",
  "    {if;{argslength};>;1;",
  "      {switch;{lower;{args;1}};",
  "        us;",
  "        {if;{get;@{userid}notesSettingsDate};==;US;",
  "<a:redTickPulse:405337501448798210>**Date Display Already set to**: `US`.",
  "          {return};",
  "          {set;@{userid}notesSettingsDate;US}",
  "<:greenTick:322847218682036254>**Date Display is now set to**: `US`.",
  ":white_small_square:**Display Format**: `(MM/DD/YY)`",
  "          {return}",
  "        };",
  "        global;",
  "        {if;{get;@{userid}notesSettingsDate};==;GLOBAL;",
  "<a:redTickPulse:405337501448798210>**Date Display Already set to**: `GLOBAL`.",
  "          {return};",
  "          {set;@{userid}notesSettingsDate;GLOBAL}",
  "<:greenTick:322847218682036254>**Date Display is now set to**: `GLOBAL`.",
  ":white_small_square:**Display Format**: `(DD/MM/YY)`",
  "          {return}",
  "        };",
  "        nodate;",
  "        {if;{get;@{userid}notesSettingsDate};==;;",
  "<a:redTickPulse:405337501448798210>**Date Display Already set to**: `OFF`.",
  "          {return};",
  "          {set;@{userid}notesSettingsDate}",
  "<:greenTick:322847218682036254>**Date Display is now set to**: `OFF`.",
  "          {return}",
  "        };",
  "        default;",
  "        {if;{get;@{userid}notesSettingsDate};==;;",
  "<a:redTickPulse:405337501448798210>**Date Display Already set to**: `OFF`.",
  "          {return};",
  "          {set;@{userid}notesSettingsDate}",
  "<:greenTick:322847218682036254>**Date Display is now set to**: `OFF`.",
  "          {return}",
  "        };",
  "<a:redTickPulse:405337501448798210>**Unknown Parameter**: `{lower;{args;1}}`",
  ":white_small_square:**Usage**: `{get;~prefixCommandName} help dsettings`",
  "      };",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} help dsettings`",
  "    };",
  "    {regextest;{args;0};/^(help|info|information)$/gim};",
  "        {switch;true;",
  "          {regextest;{args;1};/^(alias|aliases)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: Alias;",
  "            description:",
  "Is basically a synonym for the various Parameters within the Notes Tag.",
  "**Please Note**: The Page and View lists below are missing the most convenient methods of invoking these functions, and that is to simply not specify any arguments to view your Notes list, or specify the Entry's Listing Number instead of the Entry's Name to view a specific one.",
  "{zws};",
  "            fields.name:Aliases;",
  "            fields.value:",
  ":black_small_square:**Page**: `page/list/entrys/entries`",
  ":black_small_square:**Add**: `add/create/set`",
  ":black_small_square:**Edit**: `edit/set`",
  ":black_small_square:**Remove**: `rem/remove/del/delete`",
  ":black_small_square:**Help**: `help/info/information`",
  ":black_small_square:**View**: `view/check`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(add|create)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Add new entries to your list. Remember that in order to add an entry you need to provide the Name for the entry as well as the Content.",
  "**Please Note**: The Name of the Entry **Can** contain spaces, but to add it (and subsequently manipulate it) it must be wrapped in quotation marks \"like this\".",
  "(More information on that by typing `{get;~prefixCommandName} help Spaces`).",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} Entry1 Hello there!`",
  "`{get;~prefixCommandName} {lower;{args;1}} \"Entry 1\" Hello there!`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`add/create/set`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(set)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Add or Edit entries to/from your list. This particular alias merges the functionality of both parameters much like Blargbot's own set parameter for adding Tags and CCommands.",
  "If the Entry you're specifying does not exist, Set will add it. If it does exist, it will edit it.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} Entry1 Hello there!`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`add/create/edit/set`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(edit)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Edit existing entries on your list. Note that when using this parameter, the original/old content within the entry being edited will be replaced! Check the `Append` parameter if you wish to **add content** to the entry instead.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} Entry1 New text!`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`edit/set`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(append)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Append new information to an existing entry. This works similarly to Edit, however instead of replacing the old information/content, this parameter will add the new content below the old content.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} add \"Entry 1\" Text!`",
  "`{get;~prefixCommandName} edit \"Entry 1\" Replacement text!`",
  "`{get;~prefixCommandName} {lower;{args;1}} \"Entry 1\" Added text!`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(rem|remove|del|delete)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Remove an existing entry from your list.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} Entry1`",
  "`{get;~prefixCommandName} {lower;{args;1}} \"Entry 1\"`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`rem/remove/del/delete`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(space|spaces)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Add Spaces to Entry Names:;",
  "            description:",
  "Did you know you can Add Spaces to your Entry Names by wrapping the words in \"Quotation Marks\"? You can even Rename an Entry that doesn't contain spaces to one that does!",
  "If your Entry Name contains Spaces, but you only wish to View/Check it, you don't even need to use \"Quotes\", you can simply type the Name or Number of it without them. However if you wish to Edit the Entry in **Any way**, you will need to wrap it. It is highly advised that you use them even when you don't need to, to avoid mistakes.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} add \"Entry 1\" Content!`",
  "`{get;~prefixCommandName} rename Entry1 \"Entry 1\"`",
  "`{get;~prefixCommandName} check Entry 1`",
  "`{get;~prefixCommandName} Entry 1`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(manipulate)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Entry Manipulation:;",
  "            description:",
  "There are many ways to retrieve an Entry's Content{semi} You could simply type the default Tag command followed only by the Name of your Entry, or you could type the Entry's Listing Number instead shown in your Note's List/Page, or you could even be more specific and use one of the Aliases for View, for example.",
  "(More information on that by typing `{get;~prefixCommandName} help Aliases`).",
  "Similarly, you could check your Entries List by typing the Tag's name by itself, or using the Page Parameter/Aliases.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName}`",
  "`{get;~prefixCommandName} page/list/entries`",
  "`{get;~prefixCommandName} Entry1`",
  "`{get;~prefixCommandName} view/check Entry1`",
  "`{get;~prefixCommandName} 1`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(backtick|backticks|bt|-bt)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Removing Backticks Trick:;",
  "            description:",
  "Whenever you `Add`, `Edit`, `Set` or `Append` an Entry, you have the option of specifying a handy little Flag called `-bt` anywhere in your Entry's content. When you include this Flag, the command will add/edit your entry after removing the **Backticks** from the message. You can specify up to `3` backticks by typing `-bt`/`-bt1`, `-bt2` or `-bt3`, and the correct number of Consecutive Backtick groups will be erased, along with the Flag mention itself.",
  "{zws}",
  ":white_small_square:This trick is particularly useful for adding Entries which contain Animated Emojies, but you may not have the ability to use them{semi} simply grab the raw name/id of the Emoji, wrap it in backticks, and then use this flag!",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} append Entry1 ``<a:emoji:2325>`` -bt2`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(dsetting|dsettings)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Dates Display Settings:;",
  "            description:",
  "You can show the Date the Entry was Added or Last Edited next to its Name when you view/check/retrieve it by using one of the Example Commands below, as well as specifying whether you want it to show in US Format or Global Format. You can also revert things to default and Not show the Date by simply using the Default/NoDate Parameter.",
  "{zws};",
  "            fields.name:Sub-commands:;",
  "            fields.value:",
  "`{get;~prefixCommandName} dsettings us`",
  "-Toggle the Dates Feature `ON` and the formatting to `US - (MM/DD/YY)`.",
  "{zws}",
  "`{get;~prefixCommandName} dsettings global`",
  "-Toggle the Dates Feature `ON` and the formatting to `GLOBAL - (DD/MM/YY)`.",
  "{zws}",
  "`{get;~prefixCommandName} dsettings default/nodate`",
  "-Toggle the Dates Feature `OFF`.",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(esetting|esettings)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Embed Display Settings:;",
  "            description:Your Notes (Entries/Pages) will show as Rich Embeds by Default. You can switch this `OFF` at any point, as well as lightly customize its appearance.",
  "The Embed's Color will take your name's color in the current server/guild. However if you are not part of any Colored roles, the Embed will default to a light-brown tone.",
  "{zws};",
  "            fields.name:Sub-commands:;",
  "            fields.value:",
  "`{get;~prefixCommandName} esettings on/off`",
  "-Toggle the Embed Display `ON` or `OFF`.",
  "{zws}",
  "`{get;~prefixCommandName} esettings color Hex/Color`",
  "-Set your own Custom Color, specifying either the color itself in English (`Red`, `White`, `Purple`, etc) or a Hex Code (`#ff0000`, `#ad9f83`, `#000000`, etc).",
  "{zws}",
  "`{get;~prefixCommandName} esettings color default`",
  "-Switch your Embed's Color back to default. That means either your name's color if applicable, or Notes own default light-brown color.",
  "{zws}",
  "`{get;~prefixCommandName} esettings color random`",
  "-Pick a completely Random color for your Embed every time the sub-command is ran.",
  "{zws}",
  "`{get;~prefixCommandName} esettings avatar`",
  "-Toggle your Display Picture/Avatar as the corner icon instead of a Color.",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(cc|customcommand|ccomand|ccommand)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Make Notes a Custom Command:;",
  "            description:",
  "If you'd like this Tag to be a Custom Command instead to avoid having to type `T` after your prefix every time, you can make it so by pasting the following into your server/guild (so long as you have permissions to create CCs):",
  "```",
  "b!cc set notes {lb}exec{semi}notes{semi}\"{lb}join{semi}{lb}argsarray{rb}{semi}\" \"{rb}\"{rb}",
  "```",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(advance|advanced|tricks|tips)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Advanced Tips:;",
  "            description:Learn to squeeze the most out of **Notes**!",
  "Take a moment to give all these Tips a once-over. If you have any suggestions for extra features, feel free to contact **[Allen Miquel#8168](https://canary.discordapp.com/users/217786078067818497)** at Blargbot's official server.",
  "{zws};",
  "            fields.name:Add Spaces to Entry Names;",
  "            fields.value:{newline}:black_small_square:`{get;~prefixCommandName} help Spaces`;",
  "            fields.name:View Entry's Raw Contents;",
  "            fields.value:{newline}:black_small_square:`{get;~prefixCommandName} help Raw`;",
  "            fields.name:Manipulate Entries;",
  "            fields.value:{newline}:black_small_square:`{get;~prefixCommandName} help Manipulate`;",
  "            fields.name:Remove Backticks;",
  "            fields.value:{newline}:black_small_square:`{get;~prefixCommandName} help Backticks`;",
  "            fields.name:Make it a Custom Command;",
  "            fields.value:{newline}:black_small_square:`{get;~prefixCommandName} help CC`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(raw)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "This feature allows you to see the Raw content of your Note/Entry by encasing it in a Code Block. If you ever needed to copy all the text in one of your Notes, including special characters or ***Markdown Styling***, this is for you.",
  "You can use `{capitalize;{args;1};lower}` along with every Viewing option available.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} view {lower;{args;1}} Entry1`",
  "`{get;~prefixCommandName} {lower;{args;1}} Entry1`",
  "`{get;~prefixCommandName} {lower;{args;1}} 1`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(page|list|entrys|entries)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Allows you to navigate through all of your pages when you have more than `{get;~pageLimit}` entries on your list. If no Number is specified it will default to page `1`.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}}`",
  "`{get;~prefixCommandName} {lower;{args;1}} 1`",
  "`{get;~prefixCommandName} {lower;{args;1}} 2`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`page/list/entrys/entries`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(parameter|\\[parameter\\]|parameters|\\[parameters\\])$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: Parameters;",
  "            description:",
  "Parameters are Keywords that allow you to manipulate your notes in almost any way you want{semi} Viewing, Adding, Editing, Deleting, etc. Below you will find the proper Tag syntax, and all you have to do is replace `[Parameter]` with whichever one you'd like to use/view help on.",
  "**Please Note**: When viewing entries you do not Need a View parameter, you may simply type the entry's name or listing number.",
  "(More information on that by typing `{get;~prefixCommandName} help Manipulate`).",
  "{zws};",
  "            fields.name:Usage:;",
  "            fields.value:",
  "`{get;~prefixCommandName} [Parameter]`",
  "`{get;~prefixCommandName} help [Parameter]`;",
  "            fields.name:Parameters:;",
  "            fields.value:",
  "`Add/Edit/Append/Remove/Page/Rename/View`",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} add Entry1 Some Content!`",
  "`{get;~prefixCommandName} rename Entry1 \"Entry 1\"`",
  "`{get;~prefixCommandName} delete \"Entry 1\"`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(rename)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:",
  "Allows you to Rename an Entry, including adding spaces. Remember that in order to add spaces you need to wrap your Entry Name in quotation marks \"like this\".",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} OldName NewName`",
  "`{get;~prefixCommandName} {lower;{args;1}} OldName \"New Name\"`",
  "`{get;~prefixCommandName} {lower;{args;1}} \"Old Name\" \"New Name\"`",
  "          }}",
  "          {return};",
  "          {regextest;{args;1};/^(view|check)$/gim};",
  "          {embed;{buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:Help: {capitalize;{args;1};lower};",
  "            description:Check an Entry on your list.",
  "**Please Note**: You can also check/retrieve an entry by specifying its Listing Number instead of its Name. However because of this, it is highly advised not to use Only numbers as entry names.",
  "{zws};",
  "            fields.name:Examples:;",
  "            fields.value:",
  "`{get;~prefixCommandName} {lower;{args;1}} EntryName`",
  "`{get;~prefixCommandName} {lower;{args;1}} 1`",
  "`{get;~prefixCommandName} EntryName`",
  "`{get;~prefixCommandName} 1`",
  "{zws};",
  "            fields.name:Aliases:;",
  "            fields.value:",
  "`view/check`",
  "          }}",
  "          {return}",
  "        }",
  "    {embed;{buildembed;",
  "      color:{get;~eColor;0};",
  "      author.icon_url:{get;~eIcon};",
  "      author.name:Notes!  - {get;~notesRevision};",
  "      description:The Notes Tag will allow you to create your very own fancy notes applying the parameters shown below. Take a minute to visit each help sub-command to learn how to squeeze the most potential out of it.",
  "{zws};",
  "      fields.name:Usage:;",
  "      fields.value:`{get;~prefixCommandName} Add/Edit/Append/Remove/Page/Rename/View`",
  "{zws};",
  "      fields.name:Sub-commands:;",
  "      fields.value:",
  ":white_small_square:**Parameter Help**: `{get;~prefixCommandName} help Parameter`",
  ":white_small_square:**Advanced Tips**: `{get;~prefixCommandName} help Advanced`",
  ":white_small_square:**Embed Settings**: `{get;~prefixCommandName} help eSettings`",
  ":white_small_square:**Dates Settings**: `{get;~prefixCommandName} help dSettings`",
  ":white_small_square:**Aliases**: `{get;~prefixCommandName} help Aliases`",
  "    }};",
  "    {regextest;{args;0};/^(view|check)$/gim};",
  "    {if;{argslength};<;2;",
  "<a:warningSquareBlink:478804824381456390>**Missing Arguments**.",
  ":black_small_square:**Usage**: `{get;~prefixCommandName} {lower;{args;0}} Name/Number`",
  "      {return}",
  "    }",
  "    {if;{lower;{args;1}};==;raw;",
  "      {if;{lower;{args;2;n}};==;{get;~commandMatch2};",
  ":clipboard: **{get;~commandMatch2Name}**{get;~datesMatch}{newline}-----{newline}```{newline}{regexreplace;{get;~infoMatch2};/```/gim;\\`\\`\\`}{newline}```",
  "        {return}",
  "      }",
  "    }",
  "    {if;{lower;{args;1;n}};==;{get;~commandMatch};",
  "      {if;{get;@{userid}notesSettingsEmbed};!=;off;",
  "        {embed;",
  "          {buildembed;",
  "            color:{get;~eColor;0};",
  "            author.icon_url:{get;~eIcon};",
  "            author.name:{get;~commandMatchName}{get;~datesMatch};",
  "            description:{get;~infoMatch}",
  "          }",
  "        }",
  "        {return}",
  "      }",
  ":clipboard: **{get;~commandMatchName}**{get;~datesMatch}{newline}-----{newline}{get;~infoMatch}",
  "      {return};",
  "<a:redTickPulse:405337501448798210>**Unknown Entry Name**.",
  ":white_small_square:**Type** `{get;~prefixCommandName}` **to see your List**.",
  "    };",
  "<a:redTickPulse:405337501448798210>**Unknown Entry or Parameter**.",
  ":white_small_square:**Usage**: `{get;~prefixCommandName} Add/Edit/Append/Remove/Page/Rename/View`",
  ":white_small_square:**Help**: `{get;~prefixCommandName} help/info`",
  "  }",
  "}",
  "}"
]